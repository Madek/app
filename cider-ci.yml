jobs:
  build:
    name: Build the App
    run_when:
      on any branch:
        type: branch
        include_match: ^.*$
    context:
      tasks:
        build:
          git_options:
            submodules:
              include_match: ^.*$
          trial_attachments:
            screenshots:
              include_match: 'tmp\/.+\.png$'
              content_type: image/png
            logs:
              include_match: 'logs\/.+\.log$'
              content_type: text/plain
            binaries:
              include_match: '\w+\.zip'
              content_type: application/zip
          environment_variables:
            RUBY_ENGINE: ruby
            RUBY_VERSION: 2.2.4
            RUBY: '{{RUBY_ENGINE}}-{{RUBY_VERSION}}'
          traits:
            JDK: true
            Leiningen: true
            nodejs: true
            ruby-install: true
            wine: true
            xorg: true
          scripts:
            build-stylesheets:
              body:  bin/build-stylesheets-prod*
            build-electron-front:
              body: |
                set -eoux
                lein do  \
                  externs electron-front-prod app/prod/js/externs.js, \
                  cljsbuild once electron-front-prod
            build-electron-main:
              body: |
                set -eoux
                lein do  \
                  externs electron-main-prod app/prod/js/externs.js, \
                  cljsbuild once electron-main-prod
            build-jvm-main:
              body: lein uberjar
            build-components-done:
              # just a meta script to model dependencies easier
              body: exit 0
              start_when:
                build jvm server has passed:
                  script_key: build-jvm-main
                build electron-front has passed:
                  script_key: build-electron-front
                build electron-main has passed:
                  script_key: build-electron-main
                stylesheets have been built:
                  script_key: build-stylesheets
            build-mac-os:
              body: |
                set -eoux
                ./bin/build-mac-os
                zip -r Madek-App_Mac-OS.zip madek-app-darwin-x64
                # cp Madek-App_Mac-OS.zip /tmp/Madek-App_Mac-OS_${CIDER_CI_TREE_ID}.zip
              start_when:
                build-components has passed:
                  script_key: build-components-done
            build-windows:
              body: |
                set -eoux
                ./bin/build-win
                zip -r Madek-App_Windows.zip madek-app-win32-x64
                # cp Madek-App_Linux.zip /tmp/Madek-App_Linux_${CIDER_CI_TREE_ID}.zip
                #
              start_when:
                build-components has passed:
                  script_key: build-components-done
            build-linux:
              body: |
                set -eoux
                ./bin/build-linux
                zip -r Madek-App_Linux.zip madek-app-linux-x64
                # cp Madek-App_Linux.zip /tmp/Madek-App_Linux_${CIDER_CI_TREE_ID}.zip
              start_when:
                build-components has passed:
                  script_key: build-components-done
            bundle:
              exclusive_executor_resource: ruby-install_{{$RUBY}}
              timeout: 20 Minutes
              body: |
                #!/usr/bin/env bash
                set -eux
                export PATH=~/.rubies/$RUBY/bin:$PATH

                rm -f .bundle/config

                if [ ! -d ~/.rubies/$RUBY ]; then
                  ruby-install --no-install-deps $RUBY_ENGINE $RUBY_VERSION
                fi

                if [ ! -f ~/.rubies/$RUBY/bin/bundle ]; then
                  gem install bundler
                fi

                bundle install
            test:
              start_when:
                bundle has passed:
                  script_key: bundle
                build-linux has passed:
                  script_key: build-linux
              body: |
                #!/usr/bin/env bash
                set -eux
                export PATH=~/.rubies/$RUBY/bin:$PATH
                mkdir -p logs
                xvfb-run -a -e logs/xvfb.log \
                  bundle exec rspec



